- hosts: all
  tasks:
    - name: Allow related and established connections
      iptables:
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
      notify: Save iptables rules
    
    - name: Allow ssh
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 22
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Accept new SSH connections
      notify: Save iptables rules

    - name: Allow plain HTTP
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 80
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Accept new plain HTTP connections
      notify: Save iptables rules

    - name: Allow HTTPS
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 443
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Accept new HTTPS connections
      notify: Save iptables rules

    - name: Allow SSH tunnels on port 5000 /destination port/
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 5000
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Allow SSH tunel connections on dst port 5000
      notify: Save iptables rules

    - name: Allow SSH tunnels on port 5000 /source port/
      iptables:
        chain: INPUT
        protocol: tcp
        source_port: 5000
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Allow SSH tunel connections on src port 5000
      notify: Save iptables rules

    - name: Set the policy for the INPUT chain to DROP
      iptables:
        chain: INPUT
        policy: DROP
      notify: Save iptables rules

    - name: Allow Docker control
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 2377
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Accept new plain Docker connections
      notify: Save iptables rules

    - name: Allow Docker
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 7946
        ctstate: NEW
        syn: match
        jump: ACCEPT
        comment: Accept new Docker connections
      notify: Save iptables rules

    - name: Allow Docker ports
      iptables:
        chain: INPUT
        protocol: udp
        destination_port: 7946
        ctstate: NEW
        jump: ACCEPT
        comment: Accept new Docker connections
      notify: Save iptables rules

    - name: Allow Docker ports
      iptables:
        chain: INPUT
        protocol: udp
        destination_port: 4789
        ctstate: NEW
        jump: ACCEPT
        comment: Accept new Docker ports connections
      notify: Save iptables rules

    - name: Allow ICMP echo/ping
      iptables:
        chain: INPUT
        protocol: icmp
        jump: ACCEPT
        comment: Accept ICMP echo/pings
      notify: Save iptables rules


    #To disable access to registry from outside (Internet) to avoid https://dreher.in/blog/unprotected-container-registries
    #
    - name: Debug print the first network interface
      ansible.builtin.debug:
        msg: "The first network interface is {{ first_interface }}"

    - name: Allow localhost access to port 5000
      ansible.builtin.iptables:
        chain: DOCKER-USER
        protocol: tcp
        destination_port: 5000
        source: 127.0.0.1
        jump: ACCEPT
        action: insert
        rule_num: 1
      notify: Save iptables rules

    - name: Drop external access to port 5000 on eth0
      ansible.builtin.iptables:
        chain: DOCKER-USER
        protocol: tcp
        destination_port: 5000
        in_interface: "{{ first_interface }}"
        jump: DROP
        action: insert
        rule_num: 2
      notify: Save iptables rules

  handlers:
    - name: Save iptables rules
      ansible.builtin.command:
        cmd: netfilter-persistent save
      become: true
      when: ansible_os_family == "Debian"

#    - name: save iptables
#      shell: 'iptables-save > /etc/iptables/rules.v4'
